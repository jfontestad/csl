library(csl)
roxygen2::roxygenize()
roxygen2::roxygenize()
jj <- rjson::fromJSON(file = "C:/Users/Alex/D/projects/csl/edition1/CS00864_BNHLAll/CS00864_BNHLAll.json")
jj$items
jj$items[[1]]$concept
jj$items[[1]]$concept$CONCEPT_NAME
t <- jj$items[[1]]$concept$CONCEPT_NAME
paste(t, collapse = '_')
paste(t, sep  = '_')
strsplit(t, ' ')
paste(unlist(strsplit(t, ' ')), collapse = '_')
roxygen2::roxygenize()
library(csl)
roxygen2::roxygenize()
library(csl)
cls::createNameFromConceptName()
cls::createNameFromConceptName(
sourceId = 'T',
createMdFile = TRUE,
analyst = "G",
jsons = "C:/Users/Alex/D/projects/csl/tak/340_reference.json",
validated = FALSE,
usedBy = 'alexander.alexeyuk@odysseusinc.com'
)
csl::createNameFromConceptName(
sourceId = 'T',
createMdFile = TRUE,
analyst = "G",
jsons = "C:/Users/Alex/D/projects/csl/tak/340_reference.json",
validated = FALSE,
usedBy = 'alexander.alexeyuk@odysseusinc.com'
)
jj <- rjson::fromJSON(file = "C:/Users/Alex/D/projects/csl/tak/340_reference.json")
jj$expression
jj$expression$items[[1]]
library(csl)
csl::createNameFromConceptName(
sourceId = 'T',
createMdFile = TRUE,
analyst = "G",
jsons = "C:/Users/Alex/D/projects/csl/tak/340_reference.json",
validated = FALSE,
usedBy = 'alexander.alexeyuk@odysseusinc.com'
)
csl::createNameFromConceptName(
sourceId = 'T',
createMdFile = TRUE,
analyst = "G",
jsons = "C:/Users/Alex/D/projects/csl/tak/340_reference.json",
validated = FALSE,
usedBy = 'alexander.alexeyuk@odysseusinc.com'
)
csl::createNameFromConceptName(
sourceId = 'T',
createMdFile = TRUE,
analyst = "G",
jsons = "C:/Users/Alex/D/projects/csl/tak/340_reference.json",
validated = FALSE,
usedBy = 'alexander.alexeyuk@odysseusinc.com'
)
csl::createNameFromConceptName(
sourceId = 'T',
createMdFile = TRUE,
analyst = "G",
jsons = "C:/Users/Alex/D/projects/csl/tak/340_reference.json",
validated = FALSE,
usedBy = 'alexander.alexeyuk@odysseusinc.com'
)
csl::createNameFromConceptName(
sourceId = 'T',
createMdFile = TRUE,
analyst = "G",
jsons = "C:/Users/Alex/D/projects/csl/tak/340_reference.json",
validated = FALSE,
usedBy = 'alexander.alexeyuk@odysseusinc.com'
)
library(csl)
createNameFromConceptName(
sourceId = 'T',
createMdFile = TRUE,
analyst = "G",,
jsons = "C:/Users/Alex/D/projects/csl/tak/340_reference.json",
validated = FALSE,
usedBy = 'alexander.alexeyuk@odysseusinc.com'
)
createNameFromConceptName(
sourceId = 'T',
createMdFile = TRUE,
analyst = "G",
jsons = "C:/Users/Alex/D/projects/csl/tak/340_reference.json",
validated = FALSE,
usedBy = 'alexander.alexeyuk@odysseusinc.com'
)
roxygen2::roxygenize()
csl::createNameFromConceptName(
sourceId = 'T',
createMdFile = TRUE,
analyst = "G",
jsons = "C:/Users/Alex/D/projects/csl/tak/340_reference.json",
validated = FALSE,
usedBy = 'alexander.alexeyuk@odysseusinc.com'
)
csl::createNameFromConceptName(
sourceId = 'T',
createMdFile = TRUE,
analyst = "G",
jsons = "C:/Users/Alex/D/projects/csl/tak/340_reference.json",
validated = FALSE,
usedBy = 'alexander.alexeyuk@odysseusinc.com'
)
library(csl)
csl::createNameFromConceptName(
sourceId = 'T',
createMdFile = TRUE,
analyst = "G",
jsons = "C:/Users/Alex/D/projects/csl/tak/340_reference.json",
validated = FALSE,
usedBy = 'alexander.alexeyuk@odysseusinc.com'
)
library(csl)
csl::createNameFromConceptName(
sourceId = 'T',
createMdFile = TRUE,
analyst = "G",
jsons = "C:/Users/Alex/D/projects/csl/tak/340_reference.json",
validated = FALSE,
usedBy = 'alexander.alexeyuk@odysseusinc.com'
)
paste(
"CS00",
"sourceId",
collapse = '_')
paste(
"CS00",
"sourceId",
sep = '_')
library(csl)
csl::createNameFromConceptName(
sourceId = 'T',
createMdFile = TRUE,
analyst = "G",
jsons = "C:/Users/Alex/D/projects/csl/tak/340_reference.json",
validated = FALSE,
usedBy = 'alexander.alexeyuk@odysseusinc.com'
)
csl::jsonToCsv(
phenotypeName = 'smth',
conceptSetJsonRepresentation = rjson::fromJSON(file = 'C:/Users/Alex/D/projects/csl/CS00_T_Chronic_myeloid_leukemia/CS00_T_Chronic_myeloid_leukemia.json')
)
conceptSetJsonRepresentation = rjson::fromJSON(file = 'C:/Users/Alex/D/projects/csl/CS00_T_Chronic_myeloid_leukemia/CS00_T_Chronic_myeloid_leukemia.json'
)
conceptSetJsonRepresentation
conceptSetJsonRepresentation$expression
csl::jsonToCsv(
phenotypeName = 'smth',
conceptSetJsonRepresentation =
rjson::fromJSON(file = 'C:/Users/Alex/D/projects/csl/CS00_T_Chronic_myeloid_leukemia/CS00_T_Chronic_myeloid_leukemia.json')$expression
)
library(csl)
getwd()
takJsons <- list.files(
path = "/tak",
pattern = '*.json',
recursive = F,
full.names = T
)
takJsons
takJsons <- list.files(
path = "./tak",
pattern = '*.json',
recursive = F,
full.names = T
)
takJsons
getwd()
takJsons <- list.files(
path = "C:/Users/Alex/D/projects/csl/tak",
pattern = '*.json',
recursive = F,
full.names = T
)
setwd("C:/Users/Alex/D/projects/csl/Takeda out")
for(jsn in takJsons) {
csl::createNameFromConceptName(
sourceId = 'TAKEDA',
createMdFile = TRUE,
analyst = "takedaMedicalTeam",
jsons = "C:/Users/Alex/D/projects/csl/tak/340_reference.json",
validated = FALSE,
usedBy = 'unknown'
)
}
for(jsn in takJsons) {
csl::createNameFromConceptName(
sourceId = 'TAKEDA',
createMdFile = TRUE,
analyst = "takedaMedicalTeam",
jsons = jsn,
validated = FALSE,
usedBy = 'unknown'
)
}
for(jsn in takJsons) {print(jsn)}
csl::createNameFromConceptName(
sourceId = 'TAKEDA',
createMdFile = TRUE,
analyst = "takedaMedicalTeam",
jsons = takJsons,
validated = FALSE,
usedBy = 'unknown'
)
warnings()
